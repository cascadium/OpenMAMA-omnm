name: Build and Deploy

on: push

jobs:
  linux-build:
    name: Build and Test for Linux
    runs-on: ubuntu-20.04
    continue-on-error: true
    container:
      image: ${{ matrix.image }}
    strategy:
      matrix:
        include:
          # - image: openmama/openmama-dev:centos-6
          #   package_type: rpm
          #   distro: el
          #   distro_version: 6
          - image: openmama/openmama-dev:centos-7
            package_type: rpm
            package_manager: yum
            distro: el
            distro_version: 7
          # - image: openmama/openmama-dev:centos-8
          #   package_type: rpm
          #   distro: el
          #   distro_version: 8
          # - image: openmama/openmama-dev:fedora-30
          #   package_type: rpm
          #   distro: fedora
          #   distro_version: 30
          # - image: openmama/openmama-dev:fedora-31
          #   package_type: rpm
          #   distro: fedora
          #   distro_version: 31
          # - image: openmama/openmama-dev:fedora-32
          #   package_type: rpm
          #   distro: fedora
          #   distro_version: 32
          # - image: openmama/openmama-dev:ubuntu-16.04
          #   package_type: deb
          #   distro: ubuntu
          #   distro_version: xenial
          # - image: openmama/openmama-dev:ubuntu-18.04
          #   package_type: deb
          #   distro: ubuntu
          #   distro_version: bionic
          # - image: openmama/openmama-dev:ubuntu-20.04
          #   package_type: deb
          #   distro: ubuntu
          #   distro_version: focal
    steps:
    - name: Check out the code
      uses: actions/checkout@v1
    - name: Override artifact type to dev
      if: endswith(github.ref, '/develop')
      run: |
        echo "ARTIFACT_TYPE=dev" >> $GITHUB_ENV
    - name: Override artifact type to release
      if: endswith(github.ref, '/master')
      run: |
        echo "ARTIFACT_TYPE=release" >> $GITHUB_ENV
    - name: Override artifact type to rc
      if: startsWith(github.ref, 'refs/heads/release/')
      run: |
        echo "ARTIFACT_TYPE=rc" >> $GITHUB_ENV
    - run: curl -1sLf 'https://dl.cloudsmith.io/public/openmama/openmama-experimental/cfg/setup/bash.${{ matrix.package_type }}.sh' | bash
    - run: ${{ matrix.package_manager }} install -y openmama
    - run: mkdir bld && cd bld && cmake -DCMAKE_INSTALL_PREFIX=/opt/openmama-omnm -DMAMA_ROOT=/opt/openmama .. && make -j install
    - name: Find the package
      run: 'echo PKG=`find . -name "*.${{ matrix.package_type }}"` >> $GITHUB_ENV'
    - name: Archive package as an artifact
      uses: actions/upload-artifact@v1
      with:
        name: package
        path: ${{ env.PKG }}
    - name: Upload package to cloudsmith
      uses: cloudsmith-io/action@master
      if: ${{ env.ARTIFACT_TYPE }}
      env:
        artifact_type: ${{ env.ARTIFACT_TYPE }}
      with:
        api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
        command: 'push'
        format: '${{ matrix.package_type }}'
        owner: 'openmama'
        repo: 'openmama-experimental'
        distro: '${{ matrix.distro }}'
        release: '${{ matrix.distro_version }}'
        republish: 'true'
        file: '${{ env.PKG }}'

  windows-build:
    name: Build and Test for Windows
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        include:
          - os: windows-2016
            platform: x86
            generator: Visual Studio 15 2017
            vcver: msvc2017
          - os: windows-2016
            platform: x64
            generator: Visual Studio 15 2017 Win64
            vcver: msvc2017
          - os: windows-2019
            platform: x86
            generator: Visual Studio 16 2019
            args: -A Win32
            vcver: msvc2019
          - os: windows-2019
            platform: x64
            generator: Visual Studio 16 2019
            args: -A x64
            vcver: msvc2019
    steps:
    - uses: actions/checkout@v1
    - name: Run Windows Build
      run: ./devops/build/ci-run.bat
      env:
        PLATFORM: ${{ matrix.platform }}
        GENERATOR: ${{ matrix.generator }}
        EXTRA_ARGS: ${{ matrix.args }}
        VCVER: ${{ matrix.vcver }}
    - uses: actions/upload-artifact@v2
      with:
        name: package
        path: '*.zip'

  macos-build:
    name: Build and Test for MacOS
    runs-on: macos-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v1
    - name: Run MacOS Build
      run: ./devops/build/ci-run.macos.sh